// Uses rule invocations as boolean expressions

system it.xsemantics.test.fj.lambda.FjTestsForLambdas extends it.xsemantics.test.fj.first.FjFirstTypeSystem

import it.xsemantics.example.fj.fj.ClassType
import it.xsemantics.example.fj.fj.Type
import it.xsemantics.example.fj.lookup.FjAuxiliaryFunctions

inject FjAuxiliaryFunctions fjAux

judgments {
	existsSubtype ||- Type left <<! Type right
}

rule ExistsSubtypeWithLambda
	G ||- ClassType left <<! ClassType right
from {
	// we reverse the superclasses so that the top
	// classes come first; this is useful to perform
	// sensible tests (otherwise the first element examined
	// will soon succeed)
	left.classref.superclasses.reverseView.exists[
		G |- it <| right.classref
	]
}
