/*
* generated by Xtext
*/
grammar InternalFJ;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package it.xsemantics.example.fj.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package it.xsemantics.example.fj.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import it.xsemantics.example.fj.services.FJGrammarAccess;

}

@parser::members {
 
 	private FJGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(FJGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleProgram
entryRuleProgram 
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramAccess().getGroup()); }
(rule__Program__Group__0)
{ after(grammarAccess.getProgramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBasicType
entryRuleBasicType 
:
{ before(grammarAccess.getBasicTypeRule()); }
	 ruleBasicType
{ after(grammarAccess.getBasicTypeRule()); } 
	 EOF 
;

// Rule BasicType
ruleBasicType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBasicTypeAccess().getBasicAssignment()); }
(rule__BasicType__BasicAssignment)
{ after(grammarAccess.getBasicTypeAccess().getBasicAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassType
entryRuleClassType 
:
{ before(grammarAccess.getClassTypeRule()); }
	 ruleClassType
{ after(grammarAccess.getClassTypeRule()); } 
	 EOF 
;

// Rule ClassType
ruleClassType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassTypeAccess().getClassrefAssignment()); }
(rule__ClassType__ClassrefAssignment)
{ after(grammarAccess.getClassTypeAccess().getClassrefAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClass
entryRuleClass 
:
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;

// Rule Class
ruleClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassAccess().getGroup()); }
(rule__Class__Group__0)
{ after(grammarAccess.getClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMember
entryRuleMember 
:
{ before(grammarAccess.getMemberRule()); }
	 ruleMember
{ after(grammarAccess.getMemberRule()); } 
	 EOF 
;

// Rule Member
ruleMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMemberAccess().getAlternatives()); }
(rule__Member__Alternatives)
{ after(grammarAccess.getMemberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleField
entryRuleField 
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldAccess().getGroup()); }
(rule__Field__Group__0)
{ after(grammarAccess.getFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethod
entryRuleMethod 
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodAccess().getGroup()); }
(rule__Method__Group__0)
{ after(grammarAccess.getMethodAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleMethodBody
entryRuleMethodBody 
:
{ before(grammarAccess.getMethodBodyRule()); }
	 ruleMethodBody
{ after(grammarAccess.getMethodBodyRule()); } 
	 EOF 
;

// Rule MethodBody
ruleMethodBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodBodyAccess().getGroup()); }
(rule__MethodBody__Group__0)
{ after(grammarAccess.getMethodBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getGroup()); }
(rule__Expression__Group__0)
{ after(grammarAccess.getExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerminalExpression
entryRuleTerminalExpression 
:
{ before(grammarAccess.getTerminalExpressionRule()); }
	 ruleTerminalExpression
{ after(grammarAccess.getTerminalExpressionRule()); } 
	 EOF 
;

// Rule TerminalExpression
ruleTerminalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
(rule__TerminalExpression__Alternatives)
{ after(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleThis
entryRuleThis 
:
{ before(grammarAccess.getThisRule()); }
	 ruleThis
{ after(grammarAccess.getThisRule()); } 
	 EOF 
;

// Rule This
ruleThis
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getThisAccess().getVariableAssignment()); }
(rule__This__VariableAssignment)
{ after(grammarAccess.getThisAccess().getVariableAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParamRef
entryRuleParamRef 
:
{ before(grammarAccess.getParamRefRule()); }
	 ruleParamRef
{ after(grammarAccess.getParamRefRule()); } 
	 EOF 
;

// Rule ParamRef
ruleParamRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParamRefAccess().getParameterAssignment()); }
(rule__ParamRef__ParameterAssignment)
{ after(grammarAccess.getParamRefAccess().getParameterAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNew
entryRuleNew 
:
{ before(grammarAccess.getNewRule()); }
	 ruleNew
{ after(grammarAccess.getNewRule()); } 
	 EOF 
;

// Rule New
ruleNew
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNewAccess().getGroup()); }
(rule__New__Group__0)
{ after(grammarAccess.getNewAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCast
entryRuleCast 
:
{ before(grammarAccess.getCastRule()); }
	 ruleCast
{ after(grammarAccess.getCastRule()); } 
	 EOF 
;

// Rule Cast
ruleCast
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCastAccess().getGroup()); }
(rule__Cast__Group__0)
{ after(grammarAccess.getCastAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParen
entryRuleParen 
:
{ before(grammarAccess.getParenRule()); }
	 ruleParen
{ after(grammarAccess.getParenRule()); } 
	 EOF 
;

// Rule Paren
ruleParen
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParenAccess().getGroup()); }
(rule__Paren__Group__0)
{ after(grammarAccess.getParenAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstant
entryRuleConstant 
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantAccess().getAlternatives()); }
(rule__Constant__Alternatives)
{ after(grammarAccess.getConstantAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringConstant
entryRuleStringConstant 
:
{ before(grammarAccess.getStringConstantRule()); }
	 ruleStringConstant
{ after(grammarAccess.getStringConstantRule()); } 
	 EOF 
;

// Rule StringConstant
ruleStringConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringConstantAccess().getConstantAssignment()); }
(rule__StringConstant__ConstantAssignment)
{ after(grammarAccess.getStringConstantAccess().getConstantAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntConstant
entryRuleIntConstant 
:
{ before(grammarAccess.getIntConstantRule()); }
	 ruleIntConstant
{ after(grammarAccess.getIntConstantRule()); } 
	 EOF 
;

// Rule IntConstant
ruleIntConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntConstantAccess().getConstantAssignment()); }
(rule__IntConstant__ConstantAssignment)
{ after(grammarAccess.getIntConstantAccess().getConstantAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoolConstant
entryRuleBoolConstant 
:
{ before(grammarAccess.getBoolConstantRule()); }
	 ruleBoolConstant
{ after(grammarAccess.getBoolConstantRule()); } 
	 EOF 
;

// Rule BoolConstant
ruleBoolConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBoolConstantAccess().getConstantAssignment()); }
(rule__BoolConstant__ConstantAssignment)
{ after(grammarAccess.getBoolConstantAccess().getConstantAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getBasicTypeParserRuleCall_0()); }
	ruleBasicType
{ after(grammarAccess.getTypeAccess().getBasicTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getClassTypeParserRuleCall_1()); }
	ruleClassType
{ after(grammarAccess.getTypeAccess().getClassTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__BasicAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicTypeAccess().getBasicIntKeyword_0_0()); }

	'int' 

{ after(grammarAccess.getBasicTypeAccess().getBasicIntKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getBasicTypeAccess().getBasicBooleanKeyword_0_1()); }

	'boolean' 

{ after(grammarAccess.getBasicTypeAccess().getBasicBooleanKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getBasicTypeAccess().getBasicStringKeyword_0_2()); }

	'String' 

{ after(grammarAccess.getBasicTypeAccess().getBasicStringKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccess().getFieldParserRuleCall_0()); }
	ruleField
{ after(grammarAccess.getMemberAccess().getFieldParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMemberAccess().getMethodParserRuleCall_1()); }
	ruleMethod
{ after(grammarAccess.getMemberAccess().getMethodParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getThisParserRuleCall_0()); }
	ruleThis
{ after(grammarAccess.getTerminalExpressionAccess().getThisParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getParamRefParserRuleCall_1()); }
	ruleParamRef
{ after(grammarAccess.getTerminalExpressionAccess().getParamRefParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getNewParserRuleCall_2()); }
	ruleNew
{ after(grammarAccess.getTerminalExpressionAccess().getNewParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getCastParserRuleCall_3()); }
(	ruleCast)
{ after(grammarAccess.getTerminalExpressionAccess().getCastParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getConstantParserRuleCall_4()); }
	ruleConstant
{ after(grammarAccess.getTerminalExpressionAccess().getConstantParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getParenParserRuleCall_5()); }
	ruleParen
{ after(grammarAccess.getTerminalExpressionAccess().getParenParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getIntConstantParserRuleCall_0()); }
	ruleIntConstant
{ after(grammarAccess.getConstantAccess().getIntConstantParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConstantAccess().getBoolConstantParserRuleCall_1()); }
	ruleBoolConstant
{ after(grammarAccess.getConstantAccess().getBoolConstantParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getConstantAccess().getStringConstantParserRuleCall_2()); }
	ruleStringConstant
{ after(grammarAccess.getConstantAccess().getStringConstantParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BoolConstant__ConstantAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolConstantAccess().getConstantTrueKeyword_0_0()); }

	'true' 

{ after(grammarAccess.getBoolConstantAccess().getConstantTrueKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getBoolConstantAccess().getConstantFalseKeyword_0_1()); }

	'false' 

{ after(grammarAccess.getBoolConstantAccess().getConstantFalseKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Program__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getClassesAssignment_0()); }
(rule__Program__ClassesAssignment_0)*
{ after(grammarAccess.getProgramAccess().getClassesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getMainAssignment_1()); }
(rule__Program__MainAssignment_1)?
{ after(grammarAccess.getProgramAccess().getMainAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__0__Impl
	rule__Class__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getClassKeyword_0()); }

	'class' 

{ after(grammarAccess.getClassAccess().getClassKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__1__Impl
	rule__Class__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getNameAssignment_1()); }
(rule__Class__NameAssignment_1)
{ after(grammarAccess.getClassAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__2__Impl
	rule__Class__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getGroup_2()); }
(rule__Class__Group_2__0)?
{ after(grammarAccess.getClassAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__3__Impl
	rule__Class__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__4__Impl
	rule__Class__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getMembersAssignment_4()); }
(rule__Class__MembersAssignment_4)*
{ after(grammarAccess.getClassAccess().getMembersAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Class__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_2__0__Impl
	rule__Class__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getClassAccess().getExtendsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getSuperclassAssignment_2_1()); }
(rule__Class__SuperclassAssignment_2_1)
{ after(grammarAccess.getClassAccess().getSuperclassAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Field__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getTypeAssignment_0()); }
(rule__Field__TypeAssignment_0)
{ after(grammarAccess.getFieldAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNameAssignment_1()); }
(rule__Field__NameAssignment_1)
{ after(grammarAccess.getFieldAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getFieldAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Method__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__0__Impl
	rule__Method__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getTypeAssignment_0()); }
(rule__Method__TypeAssignment_0)
{ after(grammarAccess.getMethodAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__1__Impl
	rule__Method__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getNameAssignment_1()); }
(rule__Method__NameAssignment_1)
{ after(grammarAccess.getMethodAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__2__Impl
	rule__Method__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__3__Impl
	rule__Method__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getGroup_3()); }
(rule__Method__Group_3__0)?
{ after(grammarAccess.getMethodAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__4__Impl
	rule__Method__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getMethodAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__5__Impl
	rule__Method__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getLeftCurlyBracketKeyword_5()); }

	'{' 

{ after(grammarAccess.getMethodAccess().getLeftCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__6__Impl
	rule__Method__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getBodyAssignment_6()); }
(rule__Method__BodyAssignment_6)
{ after(grammarAccess.getMethodAccess().getBodyAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getMethodAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Method__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_3__0__Impl
	rule__Method__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamsAssignment_3_0()); }
(rule__Method__ParamsAssignment_3_0)
{ after(grammarAccess.getMethodAccess().getParamsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getGroup_3_1()); }
(rule__Method__Group_3_1__0)*
{ after(grammarAccess.getMethodAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Method__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_3_1__0__Impl
	rule__Method__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getMethodAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamsAssignment_3_1_1()); }
(rule__Method__ParamsAssignment_3_1_1)
{ after(grammarAccess.getMethodAccess().getParamsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeAssignment_0()); }
(rule__Parameter__TypeAssignment_0)
{ after(grammarAccess.getParameterAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameAssignment_1()); }
(rule__Parameter__NameAssignment_1)
{ after(grammarAccess.getParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodBody__Group__0__Impl
	rule__MethodBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodBodyAccess().getReturnKeyword_0()); }

	'return' 

{ after(grammarAccess.getMethodBodyAccess().getReturnKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodBody__Group__1__Impl
	rule__MethodBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodBodyAccess().getExpressionAssignment_1()); }
(rule__MethodBody__ExpressionAssignment_1)
{ after(grammarAccess.getMethodBodyAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodBody__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodBodyAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getMethodBodyAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getTerminalExpressionParserRuleCall_0()); }
	ruleTerminalExpression
{ after(grammarAccess.getExpressionAccess().getTerminalExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
(rule__Expression__Group_1__0)*
{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_1_0()); }
(rule__Expression__Group_1_0__0)
{ after(grammarAccess.getExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Expression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_0__0__Impl
	rule__Expression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSelectionReceiverAction_1_0_0()); }
(

)
{ after(grammarAccess.getExpressionAccess().getSelectionReceiverAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_0__1__Impl
	rule__Expression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getFullStopKeyword_1_0_1()); }

	'.' 

{ after(grammarAccess.getExpressionAccess().getFullStopKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_0__2__Impl
	rule__Expression__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getMessageAssignment_1_0_2()); }
(rule__Expression__MessageAssignment_1_0_2)
{ after(grammarAccess.getExpressionAccess().getMessageAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_1_0_3()); }
(rule__Expression__Group_1_0_3__0)?
{ after(grammarAccess.getExpressionAccess().getGroup_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Expression__Group_1_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_0_3__0__Impl
	rule__Expression__Group_1_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_1_0_3_0()); }

	'(' 

{ after(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_1_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_0_3__1__Impl
	rule__Expression__Group_1_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_1_0_3_1()); }
(rule__Expression__Group_1_0_3_1__0)?
{ after(grammarAccess.getExpressionAccess().getGroup_1_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_0_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_0_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_1_0_3_2()); }

	')' 

{ after(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_1_0_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression__Group_1_0_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_0_3_1__0__Impl
	rule__Expression__Group_1_0_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getArgsAssignment_1_0_3_1_0()); }
(rule__Expression__ArgsAssignment_1_0_3_1_0)
{ after(grammarAccess.getExpressionAccess().getArgsAssignment_1_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_0_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_0_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_1_0_3_1_1()); }
(rule__Expression__Group_1_0_3_1_1__0)*
{ after(grammarAccess.getExpressionAccess().getGroup_1_0_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_1_0_3_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_0_3_1_1__0__Impl
	rule__Expression__Group_1_0_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0_3_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getCommaKeyword_1_0_3_1_1_0()); }

	',' 

{ after(grammarAccess.getExpressionAccess().getCommaKeyword_1_0_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_0_3_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_0_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0_3_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getArgsAssignment_1_0_3_1_1_1()); }
(rule__Expression__ArgsAssignment_1_0_3_1_1_1)
{ after(grammarAccess.getExpressionAccess().getArgsAssignment_1_0_3_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__New__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__New__Group__0__Impl
	rule__New__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__New__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getNewKeyword_0()); }

	'new' 

{ after(grammarAccess.getNewAccess().getNewKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__New__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__New__Group__1__Impl
	rule__New__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__New__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getTypeAssignment_1()); }
(rule__New__TypeAssignment_1)
{ after(grammarAccess.getNewAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__New__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__New__Group__2__Impl
	rule__New__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__New__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getNewAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__New__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__New__Group__3__Impl
	rule__New__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__New__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getGroup_3()); }
(rule__New__Group_3__0)?
{ after(grammarAccess.getNewAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__New__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__New__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__New__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getNewAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__New__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__New__Group_3__0__Impl
	rule__New__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__New__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getArgsAssignment_3_0()); }
(rule__New__ArgsAssignment_3_0)
{ after(grammarAccess.getNewAccess().getArgsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__New__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__New__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__New__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getGroup_3_1()); }
(rule__New__Group_3_1__0)*
{ after(grammarAccess.getNewAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__New__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__New__Group_3_1__0__Impl
	rule__New__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__New__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getNewAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__New__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__New__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__New__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getArgsAssignment_3_1_1()); }
(rule__New__ArgsAssignment_3_1_1)
{ after(grammarAccess.getNewAccess().getArgsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Cast__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast__Group__0__Impl
	rule__Cast__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getCastAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast__Group__1__Impl
	rule__Cast__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getTypeAssignment_1()); }
(rule__Cast__TypeAssignment_1)
{ after(grammarAccess.getCastAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast__Group__2__Impl
	rule__Cast__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getCastAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getExpressionAssignment_3()); }
(rule__Cast__ExpressionAssignment_3)
{ after(grammarAccess.getCastAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Paren__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Paren__Group__0__Impl
	rule__Paren__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Paren__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getParenAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Paren__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Paren__Group__1__Impl
	rule__Paren__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Paren__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
{ after(grammarAccess.getParenAccess().getExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Paren__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Paren__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Paren__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getParenAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Program__ClassesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getClassesClassParserRuleCall_0_0()); }
	ruleClass{ after(grammarAccess.getProgramAccess().getClassesClassParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__MainAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getMainExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getProgramAccess().getMainExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__BasicAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicTypeAccess().getBasicAlternatives_0()); }
(rule__BasicType__BasicAlternatives_0)
{ after(grammarAccess.getBasicTypeAccess().getBasicAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassType__ClassrefAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassTypeAccess().getClassrefClassCrossReference_0()); }
(
{ before(grammarAccess.getClassTypeAccess().getClassrefClassIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getClassTypeAccess().getClassrefClassIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getClassTypeAccess().getClassrefClassCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__SuperclassAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getSuperclassClassCrossReference_2_1_0()); }
(
{ before(grammarAccess.getClassAccess().getSuperclassClassIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getClassAccess().getSuperclassClassIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getClassAccess().getSuperclassClassCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__MembersAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getMembersMemberParserRuleCall_4_0()); }
	ruleMember{ after(grammarAccess.getClassAccess().getMembersMemberParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getFieldAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getMethodAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParamsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamsParameterParserRuleCall_3_0_0()); }
	ruleParameter{ after(grammarAccess.getMethodAccess().getParamsParameterParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParamsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamsParameterParserRuleCall_3_1_1_0()); }
	ruleParameter{ after(grammarAccess.getMethodAccess().getParamsParameterParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__BodyAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getBodyMethodBodyParserRuleCall_6_0()); }
	ruleMethodBody{ after(grammarAccess.getMethodAccess().getBodyMethodBodyParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodBody__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodBodyAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getMethodBodyAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__MessageAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getMessageMemberCrossReference_1_0_2_0()); }
(
{ before(grammarAccess.getExpressionAccess().getMessageMemberIDTerminalRuleCall_1_0_2_0_1()); }
	RULE_ID{ after(grammarAccess.getExpressionAccess().getMessageMemberIDTerminalRuleCall_1_0_2_0_1()); }
)
{ after(grammarAccess.getExpressionAccess().getMessageMemberCrossReference_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ArgsAssignment_1_0_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getArgsExpressionParserRuleCall_1_0_3_1_0_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getArgsExpressionParserRuleCall_1_0_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ArgsAssignment_1_0_3_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getArgsExpressionParserRuleCall_1_0_3_1_1_1_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getArgsExpressionParserRuleCall_1_0_3_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__This__VariableAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisAccess().getVariableThisKeyword_0()); }
(
{ before(grammarAccess.getThisAccess().getVariableThisKeyword_0()); }

	'this' 

{ after(grammarAccess.getThisAccess().getVariableThisKeyword_0()); }
)

{ after(grammarAccess.getThisAccess().getVariableThisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamRef__ParameterAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamRefAccess().getParameterParameterCrossReference_0()); }
(
{ before(grammarAccess.getParamRefAccess().getParameterParameterIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getParamRefAccess().getParameterParameterIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getParamRefAccess().getParameterParameterCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__New__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getTypeClassTypeParserRuleCall_1_0()); }
	ruleClassType{ after(grammarAccess.getNewAccess().getTypeClassTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__New__ArgsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getArgsExpressionParserRuleCall_3_0_0()); }
	ruleExpression{ after(grammarAccess.getNewAccess().getArgsExpressionParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__New__ArgsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getArgsExpressionParserRuleCall_3_1_1_0()); }
	ruleExpression{ after(grammarAccess.getNewAccess().getArgsExpressionParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getTypeClassTypeParserRuleCall_1_0()); }
	ruleClassType{ after(grammarAccess.getCastAccess().getTypeClassTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getExpressionTerminalExpressionParserRuleCall_3_0()); }
	ruleTerminalExpression{ after(grammarAccess.getCastAccess().getExpressionTerminalExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringConstant__ConstantAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringConstantAccess().getConstantSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringConstantAccess().getConstantSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntConstant__ConstantAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntConstantAccess().getConstantINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getIntConstantAccess().getConstantINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BoolConstant__ConstantAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolConstantAccess().getConstantAlternatives_0()); }
(rule__BoolConstant__ConstantAlternatives_0)
{ after(grammarAccess.getBoolConstantAccess().getConstantAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


