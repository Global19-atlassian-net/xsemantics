chapter:GettingStarted[Getting Started]

section:Install[Installation of Xsemantics]

To get started, you should first install Xsemantics plugins;
you can use the update site:
link[http://master.dl.sourceforge.net/project/xsemantics/updates/composite/releases/][http://master.dl.sourceforge.net/project/xsemantics/updates/composite/releases/]

Note that this composite update site contains links also to the
official Xtext update site, so, if you don't have Xtext already installed,
you can install Xtext also from Xsemantics' update site.

The Java code generated by Xsemantics will depend only
on the plugin code[it.xsemantics.runtime].  Thus, in case you want to deploy
your Xtext language implemented making use of Xsemantics, your language will
NOT need to depend on the whole Xsemantics SDK: you only need the e[Runtime]
feature of Xsemantics.

The Xsemantics SDK contains all the features of Xsemantics, including
the examples, so, if you want to use Xsemantics for your DSL, installing
this SDK would be the best thing (you may also wanto to install the sources,
so that you can inspect Xsemantics classes).

section2:Sources[Sources]

Sources of Xsemantics (and the examples, ref:Examples[]) are available
from the git repository, please visit
link[https://github.com/LorenzoBettini/xsemantics][https://github.com/LorenzoBettini/xsemantics].

You might want to consider using link[https://wiki.eclipse.org/Eclipse_Oomph_Installer][Oomph]
to easily materialize Xsemantics sources into your workspace, together with all
the needed bundles in the target platform, as illustrated in ref:GettingSources[].

section:UsingXsemantics[Using Xsemantics]

Before you start using Xsemantics for your Xtext language, you
should add in your plugin project the following dependency:
code[it.xsemantics.runtime].

To check whether your settings work correctly,

ol[
	item[you can create an Xtext project,
accepting the defaults;]
	item[add the dependency
code[it.xsemantics.runtime];]
	item[create a file with extension code[xsemantics] in a subdirectory of one of your
	source folders;]
	item[give a name to your code[system], and save;]
	item[you should now have in your project an additional folder code[xsemantics-gen],
	where Xsemantics generates the Java file; make sure to set that folder as a source
	folder (and don't forget to add it also to your code[build.properties] file.]
]

If you see something similar to the following screenshot you should be fine.

img[images/first-xsemantics-file.png][An xsemantics file and generated code][ ][width:90%]

Xsemantics will generate Java classes as explained in ref:CodeGeneration[].

